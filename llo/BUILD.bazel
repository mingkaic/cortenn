licenses(["notice"])

filegroup(
    name = "srcs",
    srcs = glob([
        "*.hpp",
        "src/*.cpp",
    ]) + ["BUILD.bazel"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "test_srcs",
    srcs = glob([
        "test/*.hpp",
        "test/*.cpp",
    ]),
)

filegroup(
    name = "python_ext",
    srcs = glob([
        "python/*.hpp",
        "python/*.cpp",
    ])
)

######### LIBRARY #########

genrule(
    name = "generated_llo",
    srcs = ["cfg/llo.json"],
    outs = [
        "generated/api.hpp",
        "generated/api.cpp",
        "generated/capi.hpp",
        "generated/capi.cpp",
        "generated/codes.hpp",
        "generated/codes.cpp",
        "generated/grader.hpp",
        "generated/grader.cpp",
        "generated/opmap.hpp",
        "generated/opmap.cpp",
    ],
    tools = ["@com_github_mingkaic_tenncor//age:agen"],
    cmd = "$(location @com_github_mingkaic_tenncor//age:agen) " +
        "--cfg $(location :cfg/llo.json) --out $(@D)/generated " +
        "--strip_prefix=$$(dirname $(@D)) --gen_capi",
)

genrule(
    name = "generated_ipython",
    srcs = [":python_ext", ":generated_llo"],
    outs = ["generated/capi.i"],
    cmd = "printf '%%module capi\n%%include \"carrays.i\"\n" +
        "%%array_class(int32_t,int_arr);\n%%array_class(double,dbl_arr);\n" +
        "%%inline %%{\nextern int LLO_INT;\nextern int LLO_FLOAT;\n%%}\n'" +
        " > $@ && grep -h 'extern .*;' $(locations //llo:generated_llo) " +
        "$(locations //llo:python_ext) >> $@",
)

genrule(
    name = "swig_llo",
    srcs = [":generated_ipython"],
    outs = ["generated/capi_wrap.c"],
    cmd = "swig -python $(@D)/capi.i",
)

cc_library(
    name = "llo",
    hdrs = glob(["*.hpp"]) + [":generated_llo"],
    srcs = glob(["src/*.cpp"]) + [":generated_llo"],
    copts = ["-std=c++14"],
    deps = [
        "//opt:opt",
        "@com_github_mingkaic_tenncor//bwd:bwd",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "llo_python",
    hdrs = glob(["python/*.hpp"]),
    srcs = glob(["python/*.cpp"]) + [":swig_llo"],
    deps = [
        "//llo:llo",
        "@python_linux//:python27-lib",
    ],
    visibility = ["//visibility:public"],
)

######### TEST #########

cc_test(
    name = "test",
    size = "medium",
    srcs = [":test_srcs"],
    copts = ["-std=c++14"],
    deps = [
        "//llo:llo",
        "//testutil:testutil",
    ],
    data = ["//:credentials"],
)
