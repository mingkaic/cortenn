licenses(["notice"])

load("//third_party/drake_rules:pybind.bzl", "pybind_library")

filegroup(
    name = "srcs",
    srcs = glob([
        "*.hpp",
        "opt/*.hpp",
        "src/*.cpp",
    ]) + ["BUILD.bazel"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "ctest_srcs",
    srcs = glob([
        "test/*.hpp",
        "test/*.cpp",
    ]),
)

filegroup(
    name = "ptest_srcs",
    srcs = glob([
        "test/*.py",
    ]),
)

filegroup(
    name = "benchmark_srcs",
    srcs = glob([
        "bm/*.hpp",
        "bm/*.cpp",
    ]),
)

######### LIBRARY #########

genrule(
    name = "generated_llo",
    srcs = ["cfg/llo.json"],
    outs = [
        "generated/api.hpp",
        "generated/api.cpp",
        "generated/codes.hpp",
        "generated/codes.cpp",
        "generated/data.hpp",
        "generated/grader.hpp",
        "generated/grader.cpp",
        "generated/opmap.hpp",
        "generated/pyapi.cpp",
    ],
    tools = ["//pybinder:pyagen"],
    cmd = "$(location //pybinder:pyagen) " +
        "--cfg $(location :cfg/llo.json) " +
        "--out $(@D)/generated " +
        "--strip_prefix=$$(dirname $(@D))",
)

cc_library(
    name = "llo",
    hdrs = glob([
        "*.hpp",
        "opt/*.hpp",
    ]) + [
        "//llo:generated/api.hpp",
        "//llo:generated/codes.hpp",
        "//llo:generated/data.hpp",
        "//llo:generated/grader.hpp",
        "//llo:generated/opmap.hpp",
    ],
    srcs = glob(["src/*.cpp"]) + [
        "//llo:generated/api.cpp",
        "//llo:generated/codes.cpp",
        "//llo:generated/grader.cpp",
    ],
    copts = ["-std=c++14"],
    deps = [
        "//opt:opt",
        "@com_github_mingkaic_tenncor//bwd:bwd",
        "@com_github_eigenteam_eigen//:eigen",
    ],
    visibility = ["//visibility:public"],
)

pybind_library(
    name = "age_py",
    cc_srcs = ["//llo:generated/pyapi.cpp"],
    cc_deps = ["//llo:llo"],
)

pybind_library(
    name = "llo_py",
    cc_srcs = ["//llo:python/llo.cpp"],
    cc_deps = ["//llo:llo"],
    py_deps = ["//llo:age_py"],
    visibility = ["//visibility:public"],
)

######### TEST #########

cc_test(
    name = "ctest",
    srcs = ["//llo:ctest_srcs"],
    copts = ["-std=c++14"],
    deps = [
        "//llo:llo",
        "@com_github_mingkaic_tenncor//dbg:dbg",
        "@com_github_mingkaic_tenncor//testutil:testutil",
    ],
    linkstatic = True,
)

py_test(
    name = "ptest",
    srcs = ["//llo:ptest_srcs"],
    deps = ["//llo:llo_py"],
)

######### BENCHMARK #########

cc_binary(
    name = "benchmark",
    srcs = ["//llo:benchmark_srcs"],
    deps = [
        "//llo:llo",
        "@com_github_google_benchmark//:benchmark",
    ],
    copts = ["-std=c++14"],
)
